const { processarFluxo } = require('./fluxoConversas');
const { enviarMensagemSimples, verificarNumero, formatarNumero } = require('./zapiService');

async function botWebhook(req, res) {
  let numeroFinal = ''; // Declara fora do try para usar no catch
  try {
    // üß™ LOG DE DEBUG
    console.log('üì• Webhook chegou!');
    console.log('üì¶ Dados recebidos:\n', JSON.stringify(req.body, null, 2));

    // üîê Verifica√ß√£o de vari√°veis de ambiente
    if (!process.env.ZAPI_CLIENT_TOKEN || !process.env.ZAPI_INSTANCE) {
      console.error('‚ùå Vari√°veis ZAPI_CLIENT_TOKEN ou ZAPI_INSTANCE n√£o definidas!');
      return res.sendStatus(500);
    }

    const body = req.body;

    // ‚úÖ CAPTURA DO REMETENTE
    const remetente = body?.phone;
    if (!remetente) {
      console.error('‚ùå Remetente n√£o encontrado!');
      return res.sendStatus(400);
    }

    numeroFinal = formatarNumero(remetente);

    // ‚ö†Ô∏è Verifica√ß√£o do n√∫mero (desativada para testes)
    // if (!(await verificarNumero(numeroFinal))) {
    //   console.error('‚ùå N√∫mero n√£o registrado ou sem consentimento:', numeroFinal);
    //   return res.sendStatus(400);
    // }

    // ‚úÖ CAPTURA DO TEXTO OU ID DO BOT√ÉO
    let texto = '';
    let tipoEntrada = 'texto';

    if (body.button_response?.id) {
      texto = body.button_response.id;
      tipoEntrada = 'botao';
    } else {
      texto =
        body?.text?.message ||
        body?.messages?.[0]?.text?.body ||
        '';
      texto = texto.toLowerCase().trim();
    }

    console.log('üí¨ Entrada:', texto, '| Tipo:', tipoEntrada);

    // ‚úÖ PROCESSAMENTO DO FLUXO
    if (texto && numeroFinal) {
      await processarFluxo(numeroFinal, texto, tipoEntrada);
    }

    res.sendStatus(200);
  } catch (err) {
    console.error('‚ùå Erro no webhook:', err.message);

    try {
      if (numeroFinal) {
        await enviarMensagemSimples(numeroFinal, '‚ùó Ocorreu um erro. Tente novamente.');
      }
    } catch (e) {
      console.error('‚ùå Falha ao enviar mensagem de erro:', e.message);
    }

    res.sendStatus(500);
  }
}

module.exports = botWebhook;
